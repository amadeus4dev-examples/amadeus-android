package com.amadeus.android.domain.air.apis

import com.amadeus.android.ApiResponse
import com.amadeus.android.domain.resources.AirTraffic
import retrofit2.http.GET
import java.math.BigDecimal

@JvmSuppressWildcards
interface AirTrafficApi {
    /**
     * Returns a list of air traffic reports.
     * This operation allows retrieving a list of reports showing the most popular flight destinations from an origin city during a flight time period.   It is based on estimated flight traffic summary data from two journey points over a specific period. Traffic summary data are limited to bookings done through travel agencies (online or not) with Amadeus system.   It returns up to 50 results showing the travelers score as well as the flights score. Scores are between 0 and 100, 100 being the score of the top destination. Those results are sorted by default per traveler score, but can also by sorted per flight score.  ### Request example: Where were people flying to from Madrid in the January 2017? <pre><code> GET https://test.api.amadeus.com/v1/travel/analytics/air-traffic/traveled?originCityCode=MAD&period=2017-01 </code></pre>   ### Response examples: <pre><code> {     \"meta\": {         \"count\": 10,         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/travel/analytics/air-traffic/traveled?originCityCode=MAD&page[limit]=10&page[offset]=0&period=2017-01\"         }     },     \"data\": [         {             \"type\": \"air-traffic\",             \"destination\": \"PAR\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 74                 },                 \"travelers\": {                     \"score\": 100                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"BCN\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 100                 },                 \"travelers\": {                     \"score\": 78                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"TCI\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 33                 },                 \"travelers\": {                     \"score\": 67                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"LON\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 71                 },                 \"travelers\": {                     \"score\": 56                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"BRU\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 23                 },                 \"travelers\": {                     \"score\": 38                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"NYC\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 43                 },                 \"travelers\": {                     \"score\": 22                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"UIO\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 38                 },                 \"travelers\": {                     \"score\": 15                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"SDQ\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 10                 },                 \"travelers\": {                     \"score\": 15                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"OPO\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 16                 },                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"DXB\",             \"subType\": \"TRAVELED\",             \"analytics\": {                 \"flights\": {                     \"score\": 26                 },                 \"travelers\": {                     \"score\": 7                 }             }         }     ] }     </code></pre>
     * The endpoint is owned by defaultname service owner
     * @param originCityCode Code for the origin city following IATA standard ([IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx)). - e.g. BOS for Boston (required)
     * @param period period when consumers are traveling. * It can be a month only.  * [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format must be used - e.g. 2015-05.  * Period ranges are not supported.  * Only periods from 2011-01 up to previous month are valid.  * Future dates are not supported.  (required)
     * @param max maximum number of destinations in the response. Default value is **10** and maximum value is 50. (optional, default to 10)
     * @param fields list of attributes desired in the response or list of attributes to remove from the response (with \&quot;-\&quot; before fields)  * The attributes names must contain the whole path (except resource name) e.g. travelers (optional)
     * @param pageLimit maximum items in one page (optional, default to 10)
     * @param pageOffset start index of the requested page (optional, default to 0)
     * @param sort defines on which attribute the sorting will be done: * analytics.flights.score - sort destination by flights score (decreasing) * **analytics.travelers.score** - sort destination by traveler&#39;s score (decreasing)  (optional, default to analytics.travelers.score)
     */
    @GET("v1/travel/analytics/air-traffic/traveled")
    suspend fun getAirTrafficMostTraveled(
        @retrofit2.http.Query("originCityCode") originCityCode: String,
        @retrofit2.http.Query("period") period: String,
        @retrofit2.http.Query("max") max: BigDecimal?,
        @retrofit2.http.Query("fields") fields: String?,
        @retrofit2.http.Query("page[limit]") pageLimit: Int?,
        @retrofit2.http.Query("page[offset]") pageOffset: Int?,
        @retrofit2.http.Query("sort") sort: String?
    ): ApiResponse<List<AirTraffic>>
    /**
     * Returns a list of air traffic reports.
     * ### Request example: What were the top destinations people booked flights to from MAD in August 2017? <pre><code> GET https://test.api.amadeus.com/v1/travel/analytics/air-traffic/booked?originCityCode=MAD&period=2017-08 </code></pre>  ### Response examples: <pre><code> {     \"meta\": {         \"count\": 10,         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/travel/analytics/air-traffic/booked?originCityCode=MAD&page[limit]=10&page[offset]=0&period=2017-08\"         }     },     \"data\": [         {             \"type\": \"air-traffic\",             \"destination\": \"PAR\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 100                 },                 \"travelers\": {                     \"score\": 100                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"TCI\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 61                 },                 \"travelers\": {                     \"score\": 80                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"LON\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 93                 },                 \"travelers\": {                     \"score\": 65                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"BCN\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 91                 },                 \"travelers\": {                     \"score\": 61                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"NYC\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 61                 },                 \"travelers\": {                     \"score\": 51                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"BRU\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 41                 },                 \"travelers\": {                     \"score\": 39                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"UIO\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 48                 },                 \"travelers\": {                     \"score\": 37                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"SDQ\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 15                 },                 \"travelers\": {                     \"score\": 19                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"DXB\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 22                 },                 \"travelers\": {                     \"score\": 11                 }             }         },         {             \"type\": \"air-traffic\",             \"destination\": \"OPO\",             \"subType\": \"BOOKED\",             \"analytics\": {                 \"flights\": {                     \"score\": 18                 },                 \"travelers\": {                     \"score\": 8                 }             }         }     ] }  </code></pre>
     * The endpoint is owned by defaultname service owner
     * @param originCityCode Code for the origin city following IATA standard ([IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx)). - e.g. BOS for Boston (required)
     * @param period period when consumers are traveling. * It can be a month only.  * ISO format must be used - e.g. 2015-05.  * Period ranges are not supported.  * Only periods from 2011-01 up to previous month are valid.  * Future dates are not supported.  (required)
     * @param max maximum number of destinations in the response. Default value is 10 and maximum value is 50. (optional, default to 10)
     * @param fields list of attributes desired in the response or list of attributes to remove from the response (with \&quot;-\&quot; before fields)  * The attributes names must contain the whole path (except resource name) e.g. travelers (optional)
     * @param pageLimit maximum items in one page (optional, default to 10)
     * @param pageOffset start index of the requested page (optional, default to 0)
     * @param sort defines on which attribute the sorting will be done: * analytics.flights.score - sort destinations by flights score (decreasing) * analytics.travelers.score - sort destination by traveler&#39;s score (decreasing)  (optional, default to analytics.travelers.score)
     */
    @GET("v1/travel/analytics/air-traffic/booked")
    suspend fun getAirTrafficBooked(
        @retrofit2.http.Query("originCityCode") originCityCode: String,
        @retrofit2.http.Query("period") period: String,
        @retrofit2.http.Query("max") max: BigDecimal?,
        @retrofit2.http.Query("fields") fields: String?,
        @retrofit2.http.Query("page[limit]") pageLimit: Int?,
        @retrofit2.http.Query("page[offset]") pageOffset: Int?,
        @retrofit2.http.Query("sort") sort: String?
    ): ApiResponse<List<AirTraffic>>
    /**
     * Returns a list of air traffic reports.
     * This operation allows to retrieve a list of reports showing the monthly traveler traffic for a given city.   It is based on estimated flight traffic summary data of the past 12 months. Traffic summary data are limited to bookings done through travel agencies (online or not) with Amadeus system.   It returns for each past month of the year the travelers score. Scores are between 0 and 100, and represent the percentage of traveler passing by the city for a given month compare to the whole year.  There is statistic only from 2011 to today.  ### Request example: What were the busiest months for Madrid in 2017? <pre><code> GET https://test.api.amadeus.com/v1/travel/analytics/air-traffic/busiest-period?cityCode=MAD&direction=ARRIVING&period=2017 </code></pre>  ### Response examples:     <pre><code>     {     \"meta\": {         \"count\": 12,         \"links\": {             \"self\": \"https://test.api.amadeus.com/v1/travel/analytics/air-traffic/busiest-period?cityCode=MAD&direction=ARRIVING&period=2017\"         }     },     \"data\": [         {             \"type\": \"air-traffic\",             \"period\": \"2017-05\",             \"analytics\": {                 \"travelers\": {                     \"score\": 9                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-12\",             \"analytics\": {                 \"travelers\": {                     \"score\": 9                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-09\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-10\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-07\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-06\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-02\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-03\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-01\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-04\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-08\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         },         {             \"type\": \"air-traffic\",             \"period\": \"2017-11\",             \"analytics\": {                 \"travelers\": {                     \"score\": 8                 }             }         }     ] } </code></pre>
     * The endpoint is owned by defaultname service owner
     * @param cityCode Code for the city following IATA standard. [IATA table codes](http://www.iata.org/publications/Pages/code-search.aspx) - e.g. BOS for Boston (required)
     * @param period time period (year) of the statistics.  Year for which the statistic are requested following [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601)  (required)
     * @param direction Use ARRIVING to have statistics on travelers coming to the city or DEPARTING for statistics on travelers leaving the city.  By default, statistics are given on travelers ARRIVING the city.  (optional, default to ARRIVING)
     */
    @GET("v1/travel/analytics/air-traffic/busiest-period")
    suspend fun getAirTraffic(
        @retrofit2.http.Query("cityCode") cityCode: String,
        @retrofit2.http.Query("period") period: String,
        @retrofit2.http.Query("direction") direction: String?
    ): ApiResponse<List<AirTraffic>>
}
