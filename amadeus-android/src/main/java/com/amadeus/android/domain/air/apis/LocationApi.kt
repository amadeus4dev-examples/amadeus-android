package com.amadeus.android.domain.air.apis

import com.amadeus.android.ApiResponse
import com.amadeus.android.domain.resources.Location
import com.amadeus.android.tools.CSV
import retrofit2.http.GET

@JvmSuppressWildcards
interface LocationApi {
    /**
     * Returns a specific airports or cities based on its id.
     * This operation allows retrieving a locations (airports or cities) based on its id.  ### Request example: Retrieve information about the LHR airport? <pre><code> GET https://test.api.amadeus.com/v1/reference-data/locations/ALHR </code></pre>  ### Response examples:        <pre><code> {     \"meta\": {         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations/ALHR\"         }     },     \"data\": {         \"type\": \"location\",         \"subType\": \"AIRPORT\",         \"name\": \"HEATHROW\",         \"detailedName\": \"LONDON/GB:HEATHROW\",         \"id\": \"ALHR\",         \"self\": {             \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ALHR\",             \"methods\": [                 \"GET\"             ]         },         \"timeZoneOffset\": \"+01:00\",         \"iataCode\": \"LHR\",         \"geoCode\": {             \"latitude\": 51.47294,             \"longitude\": -0.45061         },         \"address\": {             \"cityName\": \"LONDON\",             \"cityCode\": \"LON\",             \"countryName\": \"UNITED KINGDOM\",             \"countryCode\": \"GB\",             \"regionCode\": \"EUROP\"         },         \"analytics\": {             \"travelers\": {                 \"score\": 45             }         }     } } </pre></code>
     * The endpoint is owned by defaultname service owner
     * @param locationId identifier of the location (required)
     */
    @GET("v1/reference-data/locations/{locationId}")
    suspend fun getAirportCity(
        @retrofit2.http.Path("locationId") locationId: String
    ): ApiResponse<Location>

    /**
     * Returns a list of airports and cities matching a given keyword.
     * This operation allows retrieving the list of locations (airports or cities) that contain a specific keyword in the start of any word in their name or in the start of their IATA code. Only major cities and civilian airports with several commercial flights per week are included by default. The response provides a list of cities and/or airports, sorted by default by travelers score, which is based on the number of travelers by airport or city, so that the airports and cities with the highest traffic are on top of the results.  There are two response formats: - the \"autocomplete\" one, which contains only most important descriptive information. This format allows a quick implementation of frontend Javascript autocomplete. - the descriptive one, with more information on airports and cities  ### Request example: Which cities or airports start with â€™r'? <pre><code> GET https://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[limit]=5 </code></pre>  ### Response example in case of airports and cities successfully returned with default response format (descriptive response format)  <pre><code> {     \"meta\": {         \"count\": 127,         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[limit]=5\",             \"next\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[offset]=5&page[limit]=5\",             \"last\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&page[offset]=122&page[limit]=5\"         }     },     \"data\": [         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"R REAGAN NAT\",             \"detailedName\": \"WASHINGTON/DC/US:R REAGAN NAT\",             \"id\": \"ADCA\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ADCA\",                 \"methods\": [                     \"GET\"                 ]             },             \"timeZoneOffset\": \"-04:00\",             \"iataCode\": \"DCA\",             \"geoCode\": {                 \"latitude\": 38.85233,                 \"longitude\": -77.0372             },             \"address\": {                 \"cityName\": \"WASHINGTON\",                 \"cityCode\": \"WAS\",                 \"countryName\": \"UNITED STATES OF AMERICA\",                 \"countryCode\": \"US\",                 \"stateCode\": \"DC\",                 \"regionCode\": \"NAMER\"             },             \"analytics\": {                 \"travelers\": {                     \"score\": 14                 }             }         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"RAJIV GANDHI INTL\",             \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",             \"id\": \"AHYD\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/AHYD\",                 \"methods\": [                     \"GET\"                 ]             },             \"timeZoneOffset\": \"+05:30\",             \"iataCode\": \"HYD\",             \"geoCode\": {                 \"latitude\": 17.23132,                 \"longitude\": 78.42986             },             \"address\": {                 \"cityName\": \"HYDERABAD\",                 \"cityCode\": \"HYD\",                 \"countryName\": \"INDIA\",                 \"countryCode\": \"IN\",                 \"regionCode\": \"ASIA\"             },             \"analytics\": {                 \"travelers\": {                     \"score\": 9                 }             }         },         {             \"type\": \"location\",             \"subType\": \"CITY\",             \"name\": \"RAJIV GANDHI INTL\",             \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",             \"id\": \"CHYD\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/CHYD\",                 \"methods\": [                     \"GET\"                 ]             },             \"timeZoneOffset\": \"+05:30\",             \"iataCode\": \"HYD\",             \"geoCode\": {                 \"latitude\": 17.23132,                 \"longitude\": 78.42986             },             \"address\": {                 \"cityName\": \"HYDERABAD\",                 \"cityCode\": \"HYD\",                 \"countryName\": \"INDIA\",                 \"countryCode\": \"IN\",                 \"regionCode\": \"ASIA\"             },             \"analytics\": {                 \"travelers\": {                     \"score\": 9                 }             }         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"INTERNATIONAL\",             \"detailedName\": \"RALEIGH DURHAM/NC/US:INTERNATI\",             \"id\": \"ARDU\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ARDU\",                 \"methods\": [                     \"GET\"                 ]             },             \"timeZoneOffset\": \"-04:00\",             \"iataCode\": \"RDU\",             \"geoCode\": {                 \"latitude\": 35.87946,                 \"longitude\": -78.7871             },             \"address\": {                 \"cityName\": \"RALEIGH DURHAM\",                 \"cityCode\": \"RDU\",                 \"countryName\": \"UNITED STATES OF AMERICA\",                 \"countryCode\": \"US\",                 \"stateCode\": \"NC\",                 \"regionCode\": \"NAMER\"             },             \"analytics\": {                 \"travelers\": {                     \"score\": 7                 }             }         },         {             \"type\": \"location\",             \"subType\": \"CITY\",             \"name\": \"INTERNATIONAL\",             \"detailedName\": \"RALEIGH DURHAM/NC/US:INTERNATI\",             \"id\": \"CRDU\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/CRDU\",                 \"methods\": [                     \"GET\"                 ]             },             \"timeZoneOffset\": \"-04:00\",             \"iataCode\": \"RDU\",             \"geoCode\": {                 \"latitude\": 35.87946,                 \"longitude\": -78.7871             },             \"address\": {                 \"cityName\": \"RALEIGH DURHAM\",                 \"cityCode\": \"RDU\",                 \"countryName\": \"UNITED STATES OF AMERICA\",                 \"countryCode\": \"US\",                 \"stateCode\": \"NC\",                 \"regionCode\": \"NAMER\"             },             \"analytics\": {                 \"travelers\": {                     \"score\": 7                 }             }         }     ] }</code></pre>  ### Response example in case of airports and cities successfully returned with with view=LIGHT (autocomplete) <pre><code> {     \"meta\": {         \"count\": 127,         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[limit]=2\",             \"next\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[offset]=2&page[limit]=2\",             \"last\": \"http://test.api.amadeus.com/v1/reference-data/locations?subType=AIRPORT,CITY&keyword=r&view=LIGHT&page[offset]=125&page[limit]=2\"         }     },     \"data\": [         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"R REAGAN NAT\",             \"detailedName\": \"WASHINGTON/DC/US:R REAGAN NAT\",             \"id\": \"ADCA\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/ADCA\",                 \"methods\": [                     \"GET\"                 ]             },             \"iataCode\": \"DCA\",             \"address\": {                 \"cityName\": \"WASHINGTON\",                 \"countryName\": \"UNITED STATES OF AMERICA\"             }         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"RAJIV GANDHI INTL\",             \"detailedName\": \"HYDERABAD/IN:RAJIV GANDHI INTL\",             \"id\": \"AHYD\",             \"self\": {                 \"href\": \"http://test.api.amadeus.com/v1/reference-data/locations/AHYD\",                 \"methods\": [                     \"GET\"                 ]             },             \"iataCode\": \"HYD\",             \"address\": {                 \"cityName\": \"HYDERABAD\",                 \"countryName\": \"INDIA\"             }         }     ] } </code></pre>
     * The endpoint is owned by defaultname service owner
     * @param subType sub type of the location (AIRPORT and/or CITY) (required)
     * @param keyword keyword that should represent the start of a word in a city or airport name or code (required)
     * @param countryCode Country code of the location using [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code format (e.g. US). (optional)
     * @param pageLimit maximum items in one page (optional, default to 10)
     * @param pageOffset start index of the requested page (optional, default to 0)
     * @param sort defines on which attribute the sorting will be done: * analytics.travelers.score - sort by the number of travelers by airport or city, the airports and cities with the highest traffic are on top of the results  (optional, default to analytics.travelers.score)
     * @param view select the level of information of the reply: * LIGHT - Gives only the IATACode, name, detailedName, cityName and countryName * FULL - Adds on top of the LIGHT information the timeZoneOffset, geocode, detailed address and travelers.score default option is FULL  (optional, default to FULL)
     */
    @GET("v1/reference-data/locations")
    suspend fun getAirportCitySearch(
        @retrofit2.http.Query("subType") @CSV subType: List<String>,
        @retrofit2.http.Query("keyword") keyword: String,
        @retrofit2.http.Query("countryCode") countryCode: String?,
        @retrofit2.http.Query("page[limit]") pageLimit: Int?,
        @retrofit2.http.Query("page[offset]") pageOffset: Int?,
        @retrofit2.http.Query("sort") sort: String?,
        @retrofit2.http.Query("view") view: String?
    ): ApiResponse<List<Location>>

    /**
     * Returns a list of relevant airports near to a given point.
     * This operation allows retrieving a list of the most relevant airports in a radius of maximum 500 km around the given coordinates. The relevance of an airport is based on the flight traffic of the airport and on the distance from the point. The results can also be sorted by traffic score (flights or travelers) or by distance.  ### Request example: What relevant airports are there around a specific location? <pre><code> GET https://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55 </code></pre>  ### Response examples: <pre><code> {     \"meta\": {         \"count\": 28,         \"links\": {             \"self\": \"http://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55\",             \"next\": \"http://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page[offset]=5\",             \"last\": \"http://test.api.amadeus.com/v1/reference-data/locations/airports?latitude=49.0000&longitude=2.55&page[offset]=10\"         }     },     \"data\": [         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"HEATHROW\",             \"detailedName\": \"LONDON/GB:HEATHROW\",             \"timeZoneOffset\": \"+01:00\",             \"iataCode\": \"LHR\",             \"geoCode\": {                 \"latitude\": 51.47294,                 \"longitude\": -0.45061             },             \"address\": {                 \"cityName\": \"LONDON\",                 \"cityCode\": \"LON\",                 \"countryName\": \"UNITED KINGDOM\",                 \"countryCode\": \"GB\",                 \"regionCode\": \"EUROP\"             },             \"distance\": {                 \"value\": 348,                 \"unit\": \"KM\"             },             \"analytics\": {                 \"flights\": {                     \"score\": 39                 },                 \"travelers\": {                     \"score\": 45                 }             },             \"relevance\": 11.21771         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"GATWICK\",             \"detailedName\": \"LONDON/GB:GATWICK\",             \"timeZoneOffset\": \"+01:00\",             \"iataCode\": \"LGW\",             \"geoCode\": {                 \"latitude\": 51.15609,                 \"longitude\": -0.17818             },             \"address\": {                 \"cityName\": \"LONDON\",                 \"cityCode\": \"LON\",                 \"countryName\": \"UNITED KINGDOM\",                 \"countryCode\": \"GB\",                 \"regionCode\": \"EUROP\"             },             \"distance\": {                 \"value\": 309,                 \"unit\": \"KM\"             },             \"analytics\": {                 \"flights\": {                     \"score\": 27                 },                 \"travelers\": {                     \"score\": 27                 }             },             \"relevance\": 8.65356         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"FRANKFURT INTL\",             \"detailedName\": \"FRANKFURT/DE:FRANKFURT INTL\",             \"timeZoneOffset\": \"+02:00\",             \"iataCode\": \"FRA\",             \"geoCode\": {                 \"latitude\": 50.0406,                 \"longitude\": 8.55603             },             \"address\": {                 \"cityName\": \"FRANKFURT\",                 \"cityCode\": \"FRA\",                 \"countryName\": \"GERMANY\",                 \"countryCode\": \"DE\",                 \"regionCode\": \"EUROP\"             },             \"distance\": {                 \"value\": 449,                 \"unit\": \"KM\"             },             \"analytics\": {                 \"flights\": {                     \"score\": 37                 },                 \"travelers\": {                     \"score\": 38                 }             },             \"relevance\": 8.32341         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"INTERNATIONAL AIRPORT\",             \"detailedName\": \"DUESSELDORF/DE:INTERNATIONAL A\",             \"timeZoneOffset\": \"+02:00\",             \"iataCode\": \"DUS\",             \"geoCode\": {                 \"latitude\": 51.28066,                 \"longitude\": 6.76715             },             \"address\": {                 \"cityName\": \"DUESSELDORF\",                 \"cityCode\": \"DUS\",                 \"countryName\": \"GERMANY\",                 \"countryCode\": \"DE\",                 \"regionCode\": \"EUROP\"             },             \"distance\": {                 \"value\": 393,                 \"unit\": \"KM\"             },             \"analytics\": {                 \"flights\": {                     \"score\": 19                 },                 \"travelers\": {                     \"score\": 16                 }             },             \"relevance\": 4.85268         },         {             \"type\": \"location\",             \"subType\": \"AIRPORT\",             \"name\": \"STANSTED\",             \"detailedName\": \"LONDON/GB:STANSTED\",             \"timeZoneOffset\": \"+01:00\",             \"iataCode\": \"STN\",             \"geoCode\": {                 \"latitude\": 51.885,                 \"longitude\": 0.235             },             \"address\": {                 \"cityName\": \"LONDON\",                 \"cityCode\": \"LON\",                 \"countryName\": \"UNITED KINGDOM\",                 \"countryCode\": \"GB\",                 \"regionCode\": \"EUROP\"             },             \"distance\": {                 \"value\": 360,                 \"unit\": \"KM\"             },             \"analytics\": {                 \"flights\": {                     \"score\": 16                 },                 \"travelers\": {                     \"score\": 15                 }             },             \"relevance\": 4.43701         },     ] }</code></pre>
     * The endpoint is owned by defaultname service owner
     * @param latitude latitude location to be at the center of the search circle (required)
     * @param longitude longitude location to be at the center of the search circle (required)
     * @param radius radius of the search in Kilometer. Can be from 0 to 500, default value is 500 Km. (optional, default to 500)
     * @param pageLimit maximum items in one page (optional, default to 10)
     * @param pageOffset start index of the requested page (optional, default to 0)
     * @param sort defines on which attribute the sorting will be done from the best option to the worst one: * **relevance** - Score value calculated based on distance and traffic analytics * distance - Distance from the location to the geo-code given in API request parameters * analytics.flights.score - Approximate score for ranking purposes calculated based on estimated number of flights from/to airport in one reference year (last year) * analytics.travelers.score - Approximate score for ranking purposes calculated based on estimated number of travelers in the airport for one reference year (last year)  (optional, default to relevance)
     */
    @GET("v1/reference-data/locations/airports")
    suspend fun getNearestRelevantAirports(
        @retrofit2.http.Query("latitude") latitude: Double,
        @retrofit2.http.Query("longitude") longitude: Double,
        @retrofit2.http.Query("radius") radius: Int?,
        @retrofit2.http.Query("page[limit]") pageLimit: Int?,
        @retrofit2.http.Query("page[offset]") pageOffset: Int?,
        @retrofit2.http.Query("sort") sort: String?
    ): ApiResponse<List<Location>>
}
