apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
    if (project.plugins.findPlugin("com.android.library")) {
        from android.sourceSets.main.java.srcDirs
    } else {
        from sourceSets.main.java.srcDirs
    }
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier = 'javadoc'
    from "$buildDir/dokka"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {		    
                groupId GROUP
                artifactId POM_ARTIFACT_ID
                version VERSION
			
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                artifact sourcesJar
                artifact javadocJar
			
                pom {
                    name = POM_NAME
                    description = POM_DESCRIPTION
                    url = POM_URL
                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                        }
                    }
                    developers {
                        developer {
                            id = 'aroux'
                            name = 'Anthony Roux'
                            email = 'anthony.roux@amadeus.com'
                        }
                        developer {
                            id = 'pietrini'
                            name = 'Nicolas Pietri'
                            email = 'nico.pietri@gmail.com'
                        }
                    }
                    scm {
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                        url = POM_SCM_URL
                    }

                    withXml {
                        def dependenciesNode = asNode().appendNode('dependencies')

                        project.configurations.implementation.allDependencies.each {
                            if(it.group != null) {
                                def dependencyNode = dependenciesNode.appendNode('dependency')
                                dependencyNode.appendNode('groupId', it.group)
                                dependencyNode.appendNode('artifactId', it.name)
                                dependencyNode.appendNode('version', it.version)
                            }
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                if (project.hasProperty('nexusUsername')) {
                    url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
                    credentials {
                        username nexusUsername
                        password nexusPassword
                    }
                }
            }
        }
    }
}

signing {
    required { gradle.taskGraph.hasTask("publish") }
    sign publishing.publications
}
